name: Deploy to EKS

on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
          
      - name: Log in to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 837005229064.dkr.ecr.ap-northeast-1.amazonaws.com
          
      - name: Build and tag Docker image
        run: |
          echo 'Creating Image'
          chmod +x ./deployment.sh
          ./deployment.sh
          docker tag ghapp 837005229064.dkr.ecr.ap-northeast-1.amazonaws.com/ghapp
          echo 'Image Created'
 
      - name: Push Docker image to ECR
        run: |
          docker push 837005229064.dkr.ecr.ap-northeast-1.amazonaws.com/ghapp

      - name: Generate Kubeconfig and Deploy To EKS
        run: |
          aws eks update-kubeconfig --name ghapp-cluster --kubeconfig kubeconfig
          cat kubeconfig
          kubectl config get-contexts
          kubectl get nodes
          kubectl apply -f ./manifest.yml
          kubectl apply -f ./service.yml
        env:
          KUBECONFIG: kubeconfig
